"use strict";
/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Stackdriver Error Reporting
 * Groups and counts similar errors from cloud services and applications, reports new errors, and provides access to error groups and their associated errors.
 *
 * OpenAPI spec version: v1beta1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const url = require("url");
const portableFetch = require("portable-fetch");
const BASE_PATH = "https://clouderrorreporting.googleapis.com".replace(/\/+$/, "");
/**
 *
 * @export
 */
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};
/**
 *
 * @export
 * @class BaseAPI
 */
class BaseAPI {
    constructor(configuration, basePath = BASE_PATH, fetch = portableFetch) {
        this.basePath = basePath;
        this.fetch = fetch;
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
}
exports.BaseAPI = BaseAPI;
;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
class RequiredError extends Error {
    constructor(field, msg) {
        super(msg);
        this.field = field;
    }
}
exports.RequiredError = RequiredError;
/**
 * ProjectsApi - fetch parameter creator
 * @export
 */
exports.ProjectsApiFetchParamCreator = function (configuration) {
    return {
        /**
         * Deletes all error events of a given project.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options = {}) {
            // verify required parameter 'projectName' is not null or undefined
            if (projectName === null || projectName === undefined) {
                throw new RequiredError('projectName', 'Required parameter projectName was null or undefined when calling clouderrorreportingProjectsDeleteEvents.');
            }
            const localVarPath = `/v1beta1/{projectName}/events`
                .replace(`{${"projectName"}}`, encodeURIComponent(String(projectName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists the specified events.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {string} [groupId] [Required] The group for which events shall be returned.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options = {}) {
            // verify required parameter 'projectName' is not null or undefined
            if (projectName === null || projectName === undefined) {
                throw new RequiredError('projectName', 'Required parameter projectName was null or undefined when calling clouderrorreportingProjectsEventsList.');
            }
            const localVarPath = `/v1beta1/{projectName}/events`
                .replace(`{${"projectName"}}`, encodeURIComponent(String(projectName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            if (groupId !== undefined) {
                localVarQueryParameter['groupId'] = groupId;
            }
            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }
            if (pageToken !== undefined) {
                localVarQueryParameter['pageToken'] = pageToken;
            }
            if (serviceFilter_resourceType !== undefined) {
                localVarQueryParameter['serviceFilter.resourceType'] = serviceFilter_resourceType;
            }
            if (serviceFilter_service !== undefined) {
                localVarQueryParameter['serviceFilter.service'] = serviceFilter_service;
            }
            if (serviceFilter_version !== undefined) {
                localVarQueryParameter['serviceFilter.version'] = serviceFilter_version;
            }
            if (timeRange_period !== undefined) {
                localVarQueryParameter['timeRange.period'] = timeRange_period;
            }
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Report an individual error event.  This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example:  `POST https://clouderrorreporting.googleapis.com/v1beta1/projects/example-project/events:report?key=123ABC456`
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ReportedErrorEvent} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options = {}) {
            // verify required parameter 'projectName' is not null or undefined
            if (projectName === null || projectName === undefined) {
                throw new RequiredError('projectName', 'Required parameter projectName was null or undefined when calling clouderrorreportingProjectsEventsReport.');
            }
            const localVarPath = `/v1beta1/{projectName}/events:report`
                .replace(`{${"projectName"}}`, encodeURIComponent(String(projectName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            localVarHeaderParameter['Content-Type'] = 'application/json';
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = ("ReportedErrorEvent" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body = needsSerialization ? JSON.stringify(body || {}) : (body || "");
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists the specified groups.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &lt;code&gt;projects/&lt;/code&gt; plus the &lt;a href&#x3D;\&quot;https://support.google.com/cloud/answer/6158840\&quot;&gt;Google Cloud Platform project ID&lt;/a&gt;.  Example: &lt;code&gt;projects/my-project-123&lt;/code&gt;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {'ERROR_COUNT_ALIGNMENT_UNSPECIFIED' | 'ALIGNMENT_EQUAL_ROUNDED' | 'ALIGNMENT_EQUAL_AT_END'} [alignment] [Optional] The alignment of the timed counts to be returned. Default is &#x60;ALIGNMENT_EQUAL_AT_END&#x60;.
         * @param {string} [alignmentTime] [Optional] Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC.
         * @param {Array<string>} [groupId] [Optional] List all &lt;code&gt;ErrorGroupStats&lt;/code&gt; with these IDs.
         * @param {'GROUP_ORDER_UNSPECIFIED' | 'COUNT_DESC' | 'LAST_SEEN_DESC' | 'CREATED_DESC' | 'AFFECTED_USERS_DESC'} [order] [Optional] The sort order in which the results are returned. Default is &#x60;COUNT_DESC&#x60;.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response. Default is 20.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {string} [timedCountDuration] [Optional] The preferred duration for a single returned &#x60;TimedCount&#x60;. If not set, no timed counts are returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options = {}) {
            // verify required parameter 'projectName' is not null or undefined
            if (projectName === null || projectName === undefined) {
                throw new RequiredError('projectName', 'Required parameter projectName was null or undefined when calling clouderrorreportingProjectsGroupStatsList.');
            }
            const localVarPath = `/v1beta1/{projectName}/groupStats`
                .replace(`{${"projectName"}}`, encodeURIComponent(String(projectName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            if (alignment !== undefined) {
                localVarQueryParameter['alignment'] = alignment;
            }
            if (alignmentTime !== undefined) {
                localVarQueryParameter['alignmentTime'] = alignmentTime;
            }
            if (groupId) {
                localVarQueryParameter['groupId'] = groupId;
            }
            if (order !== undefined) {
                localVarQueryParameter['order'] = order;
            }
            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }
            if (pageToken !== undefined) {
                localVarQueryParameter['pageToken'] = pageToken;
            }
            if (serviceFilter_resourceType !== undefined) {
                localVarQueryParameter['serviceFilter.resourceType'] = serviceFilter_resourceType;
            }
            if (serviceFilter_service !== undefined) {
                localVarQueryParameter['serviceFilter.service'] = serviceFilter_service;
            }
            if (serviceFilter_version !== undefined) {
                localVarQueryParameter['serviceFilter.version'] = serviceFilter_version;
            }
            if (timeRange_period !== undefined) {
                localVarQueryParameter['timeRange.period'] = timeRange_period;
            }
            if (timedCountDuration !== undefined) {
                localVarQueryParameter['timedCountDuration'] = timedCountDuration;
            }
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the specified group.
         * @param {string} groupName [Required] The group resource name. Written as &lt;code&gt;projects/&lt;var&gt;projectID&lt;/var&gt;/groups/&lt;var&gt;group_name&lt;/var&gt;&lt;/code&gt;. Call &lt;a href&#x3D;\&quot;/error-reporting/reference/rest/v1beta1/projects.groupStats/list\&quot;&gt; &lt;code&gt;groupStats.list&lt;/code&gt;&lt;/a&gt; to return a list of groups belonging to this project.  Example: &lt;code&gt;projects/my-project-123/groups/my-group&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options = {}) {
            // verify required parameter 'groupName' is not null or undefined
            if (groupName === null || groupName === undefined) {
                throw new RequiredError('groupName', 'Required parameter groupName was null or undefined when calling clouderrorreportingProjectsGroupsGet.');
            }
            const localVarPath = `/v1beta1/{groupName}`
                .replace(`{${"groupName"}}`, encodeURIComponent(String(groupName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Replace the data for the specified group. Fails if the group does not exist.
         * @param {string} name The group resource name. Example: &lt;code&gt;projects/my-project-123/groups/my-groupid&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ErrorGroup} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options = {}) {
            // verify required parameter 'name' is not null or undefined
            if (name === null || name === undefined) {
                throw new RequiredError('name', 'Required parameter name was null or undefined when calling clouderrorreportingProjectsGroupsUpdate.');
            }
            const localVarPath = `/v1beta1/{name}`
                .replace(`{${"name"}}`, encodeURIComponent(String(name)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication Oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            // authentication Oauth2c required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken("Oauth2c", ["https://www.googleapis.com/auth/cloud-platform"])
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }
            if (_xgafv !== undefined) {
                localVarQueryParameter['$.xgafv'] = _xgafv;
            }
            if (access_token !== undefined) {
                localVarQueryParameter['access_token'] = access_token;
            }
            if (alt !== undefined) {
                localVarQueryParameter['alt'] = alt;
            }
            if (callback !== undefined) {
                localVarQueryParameter['callback'] = callback;
            }
            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }
            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }
            if (oauth_token !== undefined) {
                localVarQueryParameter['oauth_token'] = oauth_token;
            }
            if (prettyPrint !== undefined) {
                localVarQueryParameter['prettyPrint'] = prettyPrint;
            }
            if (quotaUser !== undefined) {
                localVarQueryParameter['quotaUser'] = quotaUser;
            }
            if (uploadType !== undefined) {
                localVarQueryParameter['uploadType'] = uploadType;
            }
            if (upload_protocol !== undefined) {
                localVarQueryParameter['upload_protocol'] = upload_protocol;
            }
            localVarHeaderParameter['Content-Type'] = 'application/json';
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = ("ErrorGroup" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body = needsSerialization ? JSON.stringify(body || {}) : (body || "");
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    };
};
/**
 * ProjectsApi - functional programming interface
 * @export
 */
exports.ProjectsApiFp = function (configuration) {
    return {
        /**
         * Deletes all error events of a given project.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Lists the specified events.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {string} [groupId] [Required] The group for which events shall be returned.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Report an individual error event.  This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example:  `POST https://clouderrorreporting.googleapis.com/v1beta1/projects/example-project/events:report?key=123ABC456`
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ReportedErrorEvent} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Lists the specified groups.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &lt;code&gt;projects/&lt;/code&gt; plus the &lt;a href&#x3D;\&quot;https://support.google.com/cloud/answer/6158840\&quot;&gt;Google Cloud Platform project ID&lt;/a&gt;.  Example: &lt;code&gt;projects/my-project-123&lt;/code&gt;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {'ERROR_COUNT_ALIGNMENT_UNSPECIFIED' | 'ALIGNMENT_EQUAL_ROUNDED' | 'ALIGNMENT_EQUAL_AT_END'} [alignment] [Optional] The alignment of the timed counts to be returned. Default is &#x60;ALIGNMENT_EQUAL_AT_END&#x60;.
         * @param {string} [alignmentTime] [Optional] Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC.
         * @param {Array<string>} [groupId] [Optional] List all &lt;code&gt;ErrorGroupStats&lt;/code&gt; with these IDs.
         * @param {'GROUP_ORDER_UNSPECIFIED' | 'COUNT_DESC' | 'LAST_SEEN_DESC' | 'CREATED_DESC' | 'AFFECTED_USERS_DESC'} [order] [Optional] The sort order in which the results are returned. Default is &#x60;COUNT_DESC&#x60;.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response. Default is 20.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {string} [timedCountDuration] [Optional] The preferred duration for a single returned &#x60;TimedCount&#x60;. If not set, no timed counts are returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Get the specified group.
         * @param {string} groupName [Required] The group resource name. Written as &lt;code&gt;projects/&lt;var&gt;projectID&lt;/var&gt;/groups/&lt;var&gt;group_name&lt;/var&gt;&lt;/code&gt;. Call &lt;a href&#x3D;\&quot;/error-reporting/reference/rest/v1beta1/projects.groupStats/list\&quot;&gt; &lt;code&gt;groupStats.list&lt;/code&gt;&lt;/a&gt; to return a list of groups belonging to this project.  Example: &lt;code&gt;projects/my-project-123/groups/my-group&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Replace the data for the specified group. Fails if the group does not exist.
         * @param {string} name The group resource name. Example: &lt;code&gt;projects/my-project-123/groups/my-groupid&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ErrorGroup} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
            const localVarFetchArgs = exports.ProjectsApiFetchParamCreator(configuration).clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options);
            return (fetch = portableFetch, basePath = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        },
    };
};
/**
 * ProjectsApi - factory interface
 * @export
 */
exports.ProjectsApiFactory = function (configuration, fetch, basePath) {
    return {
        /**
         * Deletes all error events of a given project.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options)(fetch, basePath);
        },
        /**
         * Lists the specified events.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {string} [groupId] [Required] The group for which events shall be returned.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options)(fetch, basePath);
        },
        /**
         * Report an individual error event.  This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example:  `POST https://clouderrorreporting.googleapis.com/v1beta1/projects/example-project/events:report?key=123ABC456`
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ReportedErrorEvent} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options)(fetch, basePath);
        },
        /**
         * Lists the specified groups.
         * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &lt;code&gt;projects/&lt;/code&gt; plus the &lt;a href&#x3D;\&quot;https://support.google.com/cloud/answer/6158840\&quot;&gt;Google Cloud Platform project ID&lt;/a&gt;.  Example: &lt;code&gt;projects/my-project-123&lt;/code&gt;.
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {'ERROR_COUNT_ALIGNMENT_UNSPECIFIED' | 'ALIGNMENT_EQUAL_ROUNDED' | 'ALIGNMENT_EQUAL_AT_END'} [alignment] [Optional] The alignment of the timed counts to be returned. Default is &#x60;ALIGNMENT_EQUAL_AT_END&#x60;.
         * @param {string} [alignmentTime] [Optional] Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC.
         * @param {Array<string>} [groupId] [Optional] List all &lt;code&gt;ErrorGroupStats&lt;/code&gt; with these IDs.
         * @param {'GROUP_ORDER_UNSPECIFIED' | 'COUNT_DESC' | 'LAST_SEEN_DESC' | 'CREATED_DESC' | 'AFFECTED_USERS_DESC'} [order] [Optional] The sort order in which the results are returned. Default is &#x60;COUNT_DESC&#x60;.
         * @param {number} [pageSize] [Optional] The maximum number of results to return per response. Default is 20.
         * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request.
         * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
         * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
         * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
         * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
         * @param {string} [timedCountDuration] [Optional] The preferred duration for a single returned &#x60;TimedCount&#x60;. If not set, no timed counts are returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options)(fetch, basePath);
        },
        /**
         * Get the specified group.
         * @param {string} groupName [Required] The group resource name. Written as &lt;code&gt;projects/&lt;var&gt;projectID&lt;/var&gt;/groups/&lt;var&gt;group_name&lt;/var&gt;&lt;/code&gt;. Call &lt;a href&#x3D;\&quot;/error-reporting/reference/rest/v1beta1/projects.groupStats/list\&quot;&gt; &lt;code&gt;groupStats.list&lt;/code&gt;&lt;/a&gt; to return a list of groups belonging to this project.  Example: &lt;code&gt;projects/my-project-123/groups/my-group&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options)(fetch, basePath);
        },
        /**
         * Replace the data for the specified group. Fails if the group does not exist.
         * @param {string} name The group resource name. Example: &lt;code&gt;projects/my-project-123/groups/my-groupid&lt;/code&gt;
         * @param {'1' | '2'} [_xgafv] V1 error format.
         * @param {string} [access_token] OAuth access token.
         * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
         * @param {string} [callback] JSONP
         * @param {string} [fields] Selector specifying which fields to include in a partial response.
         * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
         * @param {string} [oauth_token] OAuth 2.0 token for the current user.
         * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
         * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
         * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
         * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
         * @param {ErrorGroup} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
            return exports.ProjectsApiFp(configuration).clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options)(fetch, basePath);
        },
    };
};
/**
 * ProjectsApi - object-oriented interface
 * @export
 * @class ProjectsApi
 * @extends {BaseAPI}
 */
class ProjectsApi extends BaseAPI {
    /**
     * Deletes all error events of a given project.
     * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsDeleteEvents(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options)(this.fetch, this.basePath);
    }
    /**
     * Lists the specified events.
     * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {string} [groupId] [Required] The group for which events shall be returned.
     * @param {number} [pageSize] [Optional] The maximum number of results to return per response.
     * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response.
     * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
     * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
     * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
     * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsEventsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, groupId, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, options)(this.fetch, this.basePath);
    }
    /**
     * Report an individual error event.  This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example:  `POST https://clouderrorreporting.googleapis.com/v1beta1/projects/example-project/events:report?key=123ABC456`
     * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &#x60;projects/&#x60; plus the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: &#x60;projects/my-project-123&#x60;.
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {ReportedErrorEvent} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsEventsReport(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options)(this.fetch, this.basePath);
    }
    /**
     * Lists the specified groups.
     * @param {string} projectName [Required] The resource name of the Google Cloud Platform project. Written as &lt;code&gt;projects/&lt;/code&gt; plus the &lt;a href&#x3D;\&quot;https://support.google.com/cloud/answer/6158840\&quot;&gt;Google Cloud Platform project ID&lt;/a&gt;.  Example: &lt;code&gt;projects/my-project-123&lt;/code&gt;.
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {'ERROR_COUNT_ALIGNMENT_UNSPECIFIED' | 'ALIGNMENT_EQUAL_ROUNDED' | 'ALIGNMENT_EQUAL_AT_END'} [alignment] [Optional] The alignment of the timed counts to be returned. Default is &#x60;ALIGNMENT_EQUAL_AT_END&#x60;.
     * @param {string} [alignmentTime] [Optional] Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC.
     * @param {Array<string>} [groupId] [Optional] List all &lt;code&gt;ErrorGroupStats&lt;/code&gt; with these IDs.
     * @param {'GROUP_ORDER_UNSPECIFIED' | 'COUNT_DESC' | 'LAST_SEEN_DESC' | 'CREATED_DESC' | 'AFFECTED_USERS_DESC'} [order] [Optional] The sort order in which the results are returned. Default is &#x60;COUNT_DESC&#x60;.
     * @param {number} [pageSize] [Optional] The maximum number of results to return per response. Default is 20.
     * @param {string} [pageToken] [Optional] A &#x60;next_page_token&#x60; provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request.
     * @param {string} [serviceFilter_resourceType] [Optional] The exact value to match against [&#x60;ServiceContext.resource_type&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
     * @param {string} [serviceFilter_service] [Optional] The exact value to match against [&#x60;ServiceContext.service&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
     * @param {string} [serviceFilter_version] [Optional] The exact value to match against [&#x60;ServiceContext.version&#x60;](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
     * @param {'PERIOD_UNSPECIFIED' | 'PERIOD_1_HOUR' | 'PERIOD_6_HOURS' | 'PERIOD_1_DAY' | 'PERIOD_1_WEEK' | 'PERIOD_30_DAYS'} [timeRange_period] Restricts the query to the specified time range.
     * @param {string} [timedCountDuration] [Optional] The preferred duration for a single returned &#x60;TimedCount&#x60;. If not set, no timed counts are returned.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsGroupStatsList(projectName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, alignment, alignmentTime, groupId, order, pageSize, pageToken, serviceFilter_resourceType, serviceFilter_service, serviceFilter_version, timeRange_period, timedCountDuration, options)(this.fetch, this.basePath);
    }
    /**
     * Get the specified group.
     * @param {string} groupName [Required] The group resource name. Written as &lt;code&gt;projects/&lt;var&gt;projectID&lt;/var&gt;/groups/&lt;var&gt;group_name&lt;/var&gt;&lt;/code&gt;. Call &lt;a href&#x3D;\&quot;/error-reporting/reference/rest/v1beta1/projects.groupStats/list\&quot;&gt; &lt;code&gt;groupStats.list&lt;/code&gt;&lt;/a&gt; to return a list of groups belonging to this project.  Example: &lt;code&gt;projects/my-project-123/groups/my-group&lt;/code&gt;
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsGroupsGet(groupName, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, options)(this.fetch, this.basePath);
    }
    /**
     * Replace the data for the specified group. Fails if the group does not exist.
     * @param {string} name The group resource name. Example: &lt;code&gt;projects/my-project-123/groups/my-groupid&lt;/code&gt;
     * @param {'1' | '2'} [_xgafv] V1 error format.
     * @param {string} [access_token] OAuth access token.
     * @param {'json' | 'media' | 'proto'} [alt] Data format for response.
     * @param {string} [callback] JSONP
     * @param {string} [fields] Selector specifying which fields to include in a partial response.
     * @param {string} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {string} [oauth_token] OAuth 2.0 token for the current user.
     * @param {boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {string} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {string} [uploadType] Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
     * @param {string} [upload_protocol] Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
     * @param {ErrorGroup} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApi
     */
    clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options) {
        return exports.ProjectsApiFp(this.configuration).clouderrorreportingProjectsGroupsUpdate(name, _xgafv, access_token, alt, callback, fields, key, oauth_token, prettyPrint, quotaUser, uploadType, upload_protocol, body, options)(this.fetch, this.basePath);
    }
}
exports.ProjectsApi = ProjectsApi;
//# sourceMappingURL=api.js.map